version: '3'
services:
    web:
        build:
          context: .
          args:
            APP_PORT: 5001
        ports:
            - "${APP_PORT}:${APP_PORT}"
        volumes:
            - .:/var/www/html
        # networks:
        #   - db_nw
        #   - web_nw
        depends_on:
          - db
        env_file:
          - ./.env
    db:
        image: postgres:14-alpine
        ports:
          - "${DB_PORT}:${DB_PORT}"
        volumes:
          - postgres_data:/var/lib/postgresql/data/
        environment:
          POSTGRES_USER: ${DB_USER}
          POSTGRES_PASSWORD: ${DB_PASS}
          POSTGRES_DB: ${DB_NAME}
        # networks:
        #   - db_nw
    # nginx:
    #   image: "nginx:1.13.5"
    #   ports:
    #     - "8080:80"
    #   volumes:
    #     - ./conf.d:/etc/nginx/conf.d
    #   networks:
    #     - web_nw
    #   depends_on: 
    #     - web

    nginx:
      image: nginx:stable-alpine
      container_name: "nginx"
      environment:
        - "VIRTUAL_HOST=steam.hcim.eu"
        - "LETSENCRYPT_HOST=steam.hcim.eu"
        - "LETSENCRYPT_EMAIL=sebas@hotmail.nl"
      expose:
        - "80"
      volumes:
        - ".:/var/www/html"
        - ./nginx:/etc/nginx/conf.d
      # network_mode: bridge
      restart: always
      depends_on:
        - web
      links:
        - web
volumes:
    postgres_data:      
networks:
  default:
    external:
      name: nginx-proxy